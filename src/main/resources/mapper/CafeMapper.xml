<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.cafeIn.cafeorder.mapper.CafeMapper">

  <insert id="createCafe" parameterType="kr.cafeIn.cafeorder.model.domain.Cafe">
    INSERT INTO cafes (title, location, location_setting, tel, latitude, longitude)
    VALUES (#{title}, #{location}, #{locationSetting}, #{tel}, #{latitude}, #{longitude})
  </insert>

  <select id="isExistsCafe" resultType="boolean">
    SELECT EXISTS
    (SELECT title FROM cafes WHERE title = #{title})
  </select>

  <select id="selectCafeById" resultType="kr.cafeIn.cafeorder.model.domain.Cafe">
    SELECT *
    FROM cafes
    WHERE id = #{cafeId}
  </select>

  <select id="selectCafeDetailById" resultType="kr.cafeIn.cafeorder.model.dto.response.CafeDetailResponse">
    SELECT id, title, location, location_setting, tel, latitude, longitude,
    (
        SELECT COUNT(*)
        FROM cafe_order
        WHERE table_id IN
        (
            SELECT id
            FROM cafe_tables
            WHERE cafe_tables.cafe_id = #{cafeId}
               AND end_time &lt;= now()
        )
    ) AS useCount
    FROM cafes
    WHERE cafes.id = #{cafeId}
  </select>

  <select id="selectCafeAll" resultType="kr.cafeIn.cafeorder.model.domain.Cafe">
    SELECT *
    FROM cafes
  </select>

  <update id="updateCafe">
    UPDATE cafes
    <set>
      <if test="title != null">title = #{title},</if>
      <if test="location != null">location = #{location},</if>
      <if test="locationSetting != null">location_Setting = #{locationSetting},</if>
      <if test="tel != null">tel = #{tel},</if>
      <if test="latitude != null">latitude = #{latitude},</if>
      <if test="longitude != null">longitude = #{longitude},</if>
      updated_at = NOW()
    </set>
    WHERE cafes.id = #{id}
  </update>

  <delete id="deleteCafe">
    DELETE FROM cafes WHERE id = #{id}
  </delete>

</mapper>